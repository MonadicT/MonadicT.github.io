#+title: Rate-limiting Functions
#+summary:
#+publish-date:
#+export_file_name: ../../2018/blog-site-generator.html
#+html_head: <link rel="stylesheet" type="text/css" href="style.css" />
#+tags: static site, emacs
#+options: num:nil

* Rate-limiting Functions

Most of the time, we want our functions to execute as fast as
possible. But sometimes, that is not quite what is desirable. For example,
if we are interfacing to an external service, we may be expected to be
a friendly user of it and not bombard it with requests. While it's
reasonable to expect that the service will have its own throttling
mechanism, it's still a technique worth knowing.

Throttling or rate limiting is widely used in network traffic
management. [[https://en.wikipedia.org/wiki/Token_bucket][Token bucket]] and [[https://en.wikipedia.org/wiki/Leaky_bucket][Leaky bucket]] are two commonly used
algorithms. We will implement a token-based rate limiter using
_core.async_.

What follows is a simple Clojure macro which defines a self-governing
function.

** How it works
The function waits for a token before proceeding and
the token is only issued at the specified intervals. The waiting and
token granting logic is based on _core.async_ channel constructs. Each
throttled function has an associated channel on which it waits to get
a token. A token granter waits for an interval of time on a _timeout_
channel and sends the token on the token channel. This ensures that
the function will never execute more frequently than the desired
interval. The _rendezvous_ model used by _core.async_ channels ensures
that the token granter waits until a prior granted token is consumed.

Note that the body of the function is wrapped in an anonymous function
within the generated wrapper function and invoked with an _apply_.

** defn-throttled
Clojure code for implementing a throttled function. _defn-throttled_
is a macro resembling Clojure's _defn_ but with an additional interval
specifier preceding the argument vector.

<script src="https://gist.github.com/MonadicT/9182004.js">
</script>
